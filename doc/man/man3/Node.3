.TH "Node" 3 "Tue Dec 13 2022" "Gestionnaire de parkings intelligents" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Node
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBNode\fP ()"
.br
.RI "Constructeur\&. "
.ti -1c
.RI "\fB~Node\fP ()"
.br
.RI "Destructeur\&. "
.ti -1c
.RI "void \fBsetisVisited\fP (bool visited)"
.br
.RI "Fonction permettant de modifier la valeur de isVisited\&. "
.ti -1c
.RI "const bool & \fBgetisVisited\fP () const"
.br
.RI "Fonction permettant de récupérer la valeur de isVisited\&. "
.ti -1c
.RI "void \fBsetisObstacle\fP (bool obstacle)"
.br
.RI "Fonction permettant de modifier la valeur de isObstacle\&. "
.ti -1c
.RI "const bool & \fBgetisObstacle\fP () const"
.br
.RI "Fonction permettant de récupérer la valeur de isObstacle\&. "
.ti -1c
.RI "void \fBsetParent\fP (\fBNode\fP *parent)"
.br
.RI "Fonction permettant de modifier la valeur de parent\&. "
.ti -1c
.RI "\fBNode\fP * \fBgetParent\fP () const"
.br
.RI "Fonction permettant de récupérer la valeur de parent\&. "
.ti -1c
.RI "void \fBsetVecNeighbours\fP (vector< \fBNode\fP * > VecNeighbours)"
.br
.RI "Fonction permettant de modifier la valeur de VecNeighbours\&. "
.ti -1c
.RI "vector< \fBNode\fP * > & \fBgetVecNeighbours\fP ()"
.br
.RI "Fonction permettant de récupérer la valeur de VecNeighbours\&. "
.ti -1c
.RI "void \fBsetNodepos\fP (\fBVec2\fP pos)"
.br
.RI "Fonction permettant de modifier la valeur de Nodepos\&. "
.ti -1c
.RI "const \fBVec2\fP & \fBgetNodepos\fP () const"
.br
.RI "Fonction permettant de récupérer la valeur de Nodepos\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "bool \fBopen\fP = false"
.br
.ti -1c
.RI "float \fBlocalGoal\fP"
.br
.ti -1c
.RI "float \fBGlobalGoal\fP"
.br
.ti -1c
.RI "int \fBindice\fP"
.br
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "const bool & Node::getisObstacle () const"

.PP
Fonction permettant de récupérer la valeur de isObstacle\&. 
.PP
\fBReturns\fP
.RS 4
isObstacle 
.RE
.PP

.SS "const bool & Node::getisVisited () const"

.PP
Fonction permettant de récupérer la valeur de isVisited\&. 
.PP
\fBReturns\fP
.RS 4
isVisited 
.RE
.PP

.SS "const \fBVec2\fP & Node::getNodepos () const"

.PP
Fonction permettant de récupérer la valeur de Nodepos\&. 
.PP
\fBReturns\fP
.RS 4
Nodepos 
.RE
.PP

.SS "\fBNode\fP * Node::getParent () const"

.PP
Fonction permettant de récupérer la valeur de parent\&. 
.PP
\fBReturns\fP
.RS 4
parent 
.RE
.PP

.SS "vector< \fBNode\fP * > & Node::getVecNeighbours ()"

.PP
Fonction permettant de récupérer la valeur de VecNeighbours\&. 
.PP
\fBReturns\fP
.RS 4
VecNeighbours 
.RE
.PP

.SS "void Node::setisObstacle (bool obstacle)"

.PP
Fonction permettant de modifier la valeur de isObstacle\&. 
.PP
\fBParameters\fP
.RS 4
\fIobstacle\fP valeur booléenne 
.RE
.PP

.SS "void Node::setisVisited (bool visited)"

.PP
Fonction permettant de modifier la valeur de isVisited\&. 
.PP
\fBParameters\fP
.RS 4
\fIvisited\fP valeur booléenne 
.RE
.PP

.SS "void Node::setNodepos (\fBVec2\fP pos)"

.PP
Fonction permettant de modifier la valeur de Nodepos\&. 
.PP
\fBParameters\fP
.RS 4
\fIpos\fP vecteur 2D 
.RE
.PP

.SS "void Node::setParent (\fBNode\fP * parent)"

.PP
Fonction permettant de modifier la valeur de parent\&. 
.PP
\fBParameters\fP
.RS 4
\fIparent\fP pointeur sur un noeud 
.RE
.PP

.SS "void Node::setVecNeighbours (vector< \fBNode\fP * > VecNeighbours)"

.PP
Fonction permettant de modifier la valeur de VecNeighbours\&. 
.PP
\fBParameters\fP
.RS 4
\fIVecNeighbours\fP vecteur de pointeurs sur des nodes 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Gestionnaire de parkings intelligents from the source code\&.
