.TH "Conversation" 3 "Tue Dec 13 2022" "Gestionnaire de parkings intelligents" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Conversation
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBConversation\fP ()"
.br
.RI "Constucteur par défaut de \fBConversation\fP\&. "
.ti -1c
.RI "\fB~Conversation\fP ()"
.br
.RI "Destructeur de \fBConversation\fP\&. "
.ti -1c
.RI "vector< \fBMessage\fP > \fBgetConv\fP () const"
.br
.RI "Renvoie le vecteur de \fBMessage\fP conv\&. "
.ti -1c
.RI "bool \fBmanageConv\fP (\fBParking\fP p, \fBVoiture\fP v)"
.br
.RI "Démarre une conversation entre deux entités en paramètres\&. "
.ti -1c
.RI "void \fBmanageConfirm\fP (\fBParking\fP p, \fBVoiture\fP v, int indPrOK)"
.br
.ti -1c
.RI "void \fBsendMessageVoiture\fP (\fBVoiture\fP v)"
.br
.RI "Fait appel à manageConversation dans \fBVoiture\fP pour écrire un message approprié à l'état de la conversation\&. "
.ti -1c
.RI "void \fBsendConfirmationV\fP (\fBVoiture\fP v, int indPrOK)"
.br
.ti -1c
.RI "void \fBsendConfirmationP\fP (\fBParking\fP p)"
.br
.ti -1c
.RI "void \fBsendMessageParking\fP (\fBParking\fP p)"
.br
.RI "Fait appel à manageConversation dans \fBParking\fP pour écrire un message approprié à l'état de la conversation\&. "
.ti -1c
.RI "void \fBupdateStateCarParkAfterConv\fP (\fBParking\fP &p)"
.br
.RI "Met à jour les données membres nbTotalVisitsFor10LastConv,\&. "
.ti -1c
.RI "bool \fBstockConv\fP (const string &fileName, unsigned int nbConv)"
.br
.RI "Stocke la conversation, afin de laisser une trace\&. "
.ti -1c
.RI "void \fBtestRegression\fP ()"
.br
.RI "Test de régression de la classe \fBConversation\fP\&. "
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "vector< \fBMessage\fP > Conversation::getConv () const"

.PP
Renvoie le vecteur de \fBMessage\fP conv\&. 
.PP
\fBReturns\fP
.RS 4
un vecteur de \fBMessage\fP\&. 
.RE
.PP

.SS "bool Conversation::manageConv (\fBParking\fP p, \fBVoiture\fP v)"

.PP
Démarre une conversation entre deux entités en paramètres\&. 
.PP
\fBParameters\fP
.RS 4
\fIp\fP un parking, 
.br
\fIv\fP une voiture\&. 
.RE
.PP
\fBReturns\fP
.RS 4
un booléen : true si la conversation s'est déroulée sans erreur, false sinon\&. 
.RE
.PP

.SS "void Conversation::sendMessageParking (\fBParking\fP p)"

.PP
Fait appel à manageConversation dans \fBParking\fP pour écrire un message approprié à l'état de la conversation\&. 
.PP
\fBParameters\fP
.RS 4
\fIp\fP un parking\&. 
.RE
.PP

.SS "void Conversation::sendMessageVoiture (\fBVoiture\fP v)"

.PP
Fait appel à manageConversation dans \fBVoiture\fP pour écrire un message approprié à l'état de la conversation\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP une voiture\&. 
.RE
.PP

.SS "void Conversation::updateStateCarParkAfterConv (\fBParking\fP & p)"

.PP
Met à jour les données membres nbTotalVisitsFor10LastConv,\&. nbTotalVisits et profit d'un parking\&. 
.PP
\fBParameters\fP
.RS 4
\fIp\fP le parking qu'on met à jour 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Gestionnaire de parkings intelligents from the source code\&.
